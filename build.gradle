plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'org.silverbullet'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui'
	
	implementation 'org.webjars:bootstrap:5.1.3'
	implementation 'org.webjars:jquery:3.3.1'
	implementation 'org.webjars:webjars-locator-core:0.58'
	
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

task npmRunBuild() {
    if (!file("${rootDir}/frontend/node_modules").exists()) {
        "npm --prefix ${rootDir}/frontend install ${rootDir}/frontend"
                .execute()
                .waitForProcessOutput(System.out, System.err)
    }
    "npm --prefix ${rootDir}/frontend run build"
            .execute()
            .waitForProcessOutput(System.out, System.err)
}

tasks.named('test') {
	useJUnitPlatform()
}
